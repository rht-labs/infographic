---
kind: Template
apiVersion: v1
metadata:
  annotations:
    description: HTTPD deployer
    iconClass: icon-apache
    tags: quickstart,httpd,web
  name: infographic-deployer
labels:
  template: infographic-deployer
parameters:
- name: NAMESPACE
  description: The OpenShift Namespace where the Infographic app will be Deployed
  displayName: Infographic Deployment Namespace
  value: infographic-dev
- name: BUILD_NAMESPACE
  description: The OpenShift Namespace where the app will be Built
  displayName: Pipeline Namespace
  value: infographic-pipeline
- name: IMAGE_TAG
  description: The ImageStreamTag for the deployment
  displayName: Image Tag
  value: latest
- name: HTTPD_APPLICATION_NAME
  description: The name for the HTTPD application.
  displayName: Apache application name
  value: httpd-app
  required: true
- name: HTTPD_APPLICATION_HOSTNAME
  displayName: HTTPD application route hostname.
  description: 'Custom hostname for HTTPD service route.  Leave blank for default
    hostname, e.g.: <application-name>-<project>.<default-domain-suffix>'
objects:
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: "${HTTPD_APPLICATION_NAME}"
    namespace: ${NAMESPACE}
    labels:
      application: "${HTTPD_APPLICATION_NAME}"
- kind: Route
  apiVersion: v1
  metadata:
    name: "${HTTPD_APPLICATION_NAME}"
    namespace: ${NAMESPACE}
    labels:
      application: "${HTTPD_APPLICATION_NAME}"
    annotations:
      description: Route for application's http service.
  spec:
    host: "${HTTPD_APPLICATION_HOSTNAME}"
    to:
      kind: Service
      name: "${HTTPD_APPLICATION_NAME}"
    port:
      targetPort: 8080-tcp
- kind: Service
  apiVersion: v1
  metadata:
    name: "${HTTPD_APPLICATION_NAME}"
    namespace: ${NAMESPACE}
    labels:
      application: "${HTTPD_APPLICATION_NAME}"
    annotations:
      description: The HTTPD server's http port.
  spec:
    ports:
    - name: 8080-tcp
      protocol: TCP
      port: 8080
      targetPort: 8080
    selector:
      application: "${HTTPD_APPLICATION_NAME}"
      deploymentconfig: "${HTTPD_APPLICATION_NAME}"
    type: ClusterIP
    sessionAffinity: None
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${HTTPD_APPLICATION_NAME}"
    namespace: ${NAMESPACE}
    labels:
      app: "${HTTPD_APPLICATION_NAME}"
  spec:
    strategy:
      type: Rolling
      rollingParams:
        updatePeriodSeconds: 1
        intervalSeconds: 1
        timeoutSeconds: 600
        maxUnavailable: 25%
        maxSurge: 25%
      resources: {}
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - "${HTTPD_APPLICATION_NAME}"
        from:
          kind: ImageStreamTag
          name: "${HTTPD_APPLICATION_NAME}:${IMAGE_TAG}"
    replicas: 1
    test: false
    selector:
      application: "${HTTPD_APPLICATION_NAME}"
      deploymentconfig: "${HTTPD_APPLICATION_NAME}"
    template:
      metadata:
        labels:
          application: "${HTTPD_APPLICATION_NAME}"
          deploymentconfig: "${HTTPD_APPLICATION_NAME}"
      spec:
        containers:
        - name: "${HTTPD_APPLICATION_NAME}"
          image: "${HTTPD_APPLICATION_NAME}"
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: "/dev/termination-log"
          imagePullPolicy: Always
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        securityContext: {}
- kind: RoleBinding
  apiVersion: v1
  metadata:
    name: jenkins_edit
    namespace: ${NAMESPACE}
  roleRef:
    name: edit
  subjects:
  - kind: ServiceAccount
    name: jenkins
    namespace: ${BUILD_NAMESPACE}
  userNames:
  - system:serviceaccount:${BUILD_NAMESPACE}:jenkins
